on 1:TEXT:*:#fuelrats,#ratchat: {
  if ($nick isin "MechaSqueak[BOT]") {
    if ($regex(signal, $1-, /RATSIGNAL Case #(\d+) (PC|Xbox|Playstation|unknown platform)(?: )?(LEG|HOR|ODY)?(?: \(Code Red\))? – CMDR (.+?)(?: \(.*\))? – System: ".*" \(.+\) – Language: .+ \(([a-z]{2})(?:-\w{2,3})?\)(?: – Nick: ([\w\[\]\^-{|}]+))?.?(?:\((?:ODY|HOR|LEG|XB|PS)_SIGNAL\))?.?/SAF)) {
      if ($regml(signal, 6) == $null) {
        /set %nickname $regml(signal, 4)
      }
      else {
        /set %nickname $regml(signal, 6)
      }

      if ($regml(signal, 3) == ODY) {
        /set %mode Odyssey
      }
      elseif ($regml(signal, 3) == HOR) {
        /set %mode Horizons
      }
      else {
        /set %mode Legacy
      }

      /set -g %caseTracker $true

      /set %caseNumber $regml(signal, 1)
      /set %platform $regml(signal, 2)
      /set %language $regml(signal, 5)

      %tokens = ""
      %tokens = $addtok(%tokens,%nickname,36)
      %tokens = $addtok(%tokens,%platform,36)
      %tokens = $addtok(%tokens,%mode,36)
      %tokens = $addtok(%tokens,%language,36)

      /echo -tsg new client %caseNumber => $gettok(%tokens,1,36) - speaking $gettok(%tokens,4,36) on $gettok(%tokens,2,36) ( $+ $gettok(%tokens,3,36) $+ )

      /hadd -m10 cases %caseNumber %tokens
    }

    if ($regex(nickCMD, $1-, /The client nickname for case #(\d+) \(.*\) has been changed to (.*)\./S)) {
      /changeTokenValue $regml(nickCMD, 1) nickname $regml(nickCMD, 2)
    }

    if ($regex(nickChange, $1-, /Caution: Client of case #(\d+) \(.*\) has changed IRC nick to (.*)/S)) {
      /changeTokenValue $regml(nickChange, 1) nickname $regml(nickChange, 2)
    }

    if ($regex(nickChangeJoin, $1-, /Caution: Case #(\d+) client \(.*\) has rejoined with a different name! \((.*)\)/S)) {
      /changeTokenValue $regml(nickChangeJoin, 1) nickname $regml(nickChangeJoin, 2)
    }

    if ($regex(langChange, $1-, /The language for case #(\d+) \(.*\) has now been changed to (\w{2}).*/S)) {
      /changeTokenValue $regml(langChange, 1) language $regml(langChange, 2)
    }

    if ($regex(platformChange, $1-, /The platform for case #(\d+) \(.*\) has been set to: (PC|Xbox|Playstation)\./S)) {
      /set %caseNumber $regml(platformChange, 1)
      /set %platform $regml(platformChange, 2)

      /getMode %caseNumber
      /set %mode $result

      /changeTokenValue %caseNumber platform %platform

      if (%platform != PC && %mode != Legacy) {
        /changeTokenValue %caseNumber mode Legacy
      }
    }

    if ($regex(modeChange, $1-, /Case #(\d+) \(.*\) is marked as using the (Legacy|Horizons|Odyssey) version/SF)) {
      /changeTokenValue $regml(modeChange, 1) mode $regml(modeChange, 2)
    }

    if ($regex(close, $1-, /Successfully closed case #(\d+).*/S)) {
      /set %caseNumber $regml(close, 1)

      if ($hget(cases, %caseNumber) != $null) {
        /echo -tsg case %caseNumber closed
        /hdel cases %caseNumber
      }
    }

    if ($regex(md, $1-, /Successfully added case #(\d+) \(.*\) to the deletion list\./S)) {
      /set %caseNumber $regml(md, 1)

      if ($hget(cases, %caseNumber) != $null) {
        /echo -tsg case %caseNumber MDed
        /hdel cases %caseNumber
      }
    }
  }
}
